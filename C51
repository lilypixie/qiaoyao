#include<reg51.h>
#include<stdio.h>
#include<intrins.h>
#define OSC 22118400
#define BAUDRATE 9600
#define uchar unsigned char
sbit DIN =P1^0;
sbit SCK =P1^1;
sbit CS =P1^2;
sbit C0=P0^0;
sbit C1=P0^1;
sbit C2=P0^2;
sbit C3=P0^3;
sbit C4=P0^4;
unsigned char sindata[64]=
{0x80,0x8c,0x98,0xa5,0xb0,0xbc,0xc7,0xd1,0xda,0xe2,0xea,0xf0,0xf6,0xfa,0xfd,0xff,0xff,0xff,0xfd,0xfa,0xf6,0xf0,0xea,0xe3,0xda,
0xd1,0xc7,0xbc,0xbe,0xa5,0x99,0x8c,0x80,0x73,0x67,0x5b,0x4f,0x43,0x39,0x2e,0x25,0x1d,0x15,0xf,0x9,0x5,0x2,0x0,0x0,
0x0,0x2,0x5,0x9,0xe,0x15,0x1c,0x25,0x2e,0x38,0x43,0x4e,0x5a,0x66,0x73};

void DAConvert(unsigned int da)
{
int i;
da<<=2;
da&=0xFFC;
SCK=0;
CS=0;
for(i=0;i<12;i++)
{if(da&0x800)DIN=1;
else DIN=0;
SCK=1;
SCK=0;
da<<=1;
}
CS=1;
SCK=1;
DIN=1;
}

void delay(uchar k)
{
  uchar i,j;
  for(i=0;i<k;i++)
   for (j=0;j<250;j++);
}

void juchi()//锯齿波
{
   while(1)
   {
    unsigned int i;
	for(i=0;i<526;i++)
	{
	 DAConvert(i);
	}
	if(C0==1) break;
   }
}

void fangbo()//方波
{
   while(1)
   { 
    DAConvert(526);
	delay(500);
	DAConvert(0);
	delay(500);
	if(C1==1) break;
   }
}

void sanjiao()//三角波
{
   unsigned int i;
   while(1)
   { 
   	for(i=0;i<526;i++)
	{DAConvert(i);}
	for(i=526;i>0;i--)
	{DAConvert(i);}
	if(C2==1) break;
	}
}

void tixing()//梯形波
{
 unsigned int i;
 while(1)
 {
    for(i=0;i<526;i++)
	{DAConvert(i);}
	delay(500);
	for(i=526;i>0;i--)
	{DAConvert(i);}
	delay(500);
	if(C3==1) break;
 }
}

void sin(void)	//正弦波
{
  uchar k;
  while(1)
  {
    for (k=0;k<64;k++)
	{
	  DAConvert(sindata[k]);
	  delay(10);
	  }
	  if(C1==1) break;
	  }
	 }
void main(void)
{
  int button=0;
  while(1)
  {
   if(C0==0) button=1;
   if(C1==0) button=2;
   if(C2==0) button=3;
   if(C3==0) button=4;
   if(C4==0) button=5;

   switch(button)
   {
    case 1: juchi();
	break;
	case 2: fangbo();
	break;
	case 3: sanjiao();
	break;
	case 4: tixing();
	break;
	case 5: sin();
	break;
   }
  }
}
